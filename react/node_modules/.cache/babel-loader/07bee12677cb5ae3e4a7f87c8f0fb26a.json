{"ast":null,"code":"var _jsxFileName = \"/Users/ranggaluksatrio/lighthouse/final/level-up/react/src/pages/Quest.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport NavForApp from '../components/NavForApp';\nexport default function Quest() {\n  const nodes = [{\n    title: 'start',\n    isComplete: true\n  }, {\n    title: 'middle',\n    isComplete: true\n  }, {\n    title: 'end',\n    isComplete: false\n  }];\n  const posts = [{\n    title: \"post 1\",\n    date: Date(Date.now()).toString(),\n    symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n    comment_count: 5\n  }, {\n    title: \"post 1\",\n    date: Date(Date.now()).toString(),\n    symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n    comment_count: 5\n  }, {\n    title: \"post 1\",\n    date: Date(Date.now()).toString(),\n    symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n    comment_count: 5\n  }];\n\n  const NodeBar = ({\n    nodes\n  }) => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, nodes.map((node, index) => React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Node \", nodes.isComplete ? 'done' : 'not done')));\n  };\n\n  const QuestList = ({\n    posts\n  }) => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, posts.map((post, index) => React.createElement(QuestListItem, {\n      title: post.title,\n      date: post.date,\n      symbol: post.symbol,\n      comment_count: post.comment_count,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"New Post\"));\n  };\n\n  const QuestListItem = ({\n    title,\n    date,\n    symbol,\n    comment_count\n  }) => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, date), React.createElement(\"img\", {\n      src: symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, comment_count));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(NavForApp, {\n    nav_title: \"QUEST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Hello\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(NodeBar, {\n    nodes: nodes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(QuestList, {\n    posts: posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ranggaluksatrio/lighthouse/final/level-up/react/src/pages/Quest.js"],"names":["React","Grid","NavForApp","Quest","nodes","title","isComplete","posts","date","Date","now","toString","symbol","comment_count","NodeBar","map","node","index","QuestList","post","QuestListItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport NavForApp from '../components/NavForApp';\n\nexport default function Quest() {\n\n  const nodes = [\n    {\n      title: 'start',\n      isComplete: true\n    },\n    {\n      title: 'middle',\n      isComplete: true\n    },\n    {\n      title: 'end',\n      isComplete: false\n    }\n  ]\n\n  const posts = [\n    {\n      title: \"post 1\",\n      date: Date(Date.now()).toString(),\n      symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n      comment_count: 5,\n    },\n    {\n      title: \"post 1\",\n      date: Date(Date.now()).toString(),\n      symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n      comment_count: 5,\n    },\n    {\n      title: \"post 1\",\n      date: Date(Date.now()).toString(),\n      symbol: \"https://cdn4.iconfinder.com/data/icons/must-have-outline/100/objects-29-512.png\",\n      comment_count: 5,\n    }\n  ] \n\n  const NodeBar = ({nodes}) => {\n    return (\n      <div>\n        {nodes.map((node, index) => (\n          <Grid item xs={2}>\n          Node {nodes.isComplete ? 'done' : 'not done'}\n          </Grid>\n        ))}\n      </div>\n    )\n  }\n  \n  const QuestList = ({posts}) => {\n    return (\n      <div>\n        {\n          posts.map((post, index) => (\n            <QuestListItem title={post.title} date={post.date} symbol={post.symbol} comment_count={post.comment_count} index={index} />\n          ))\n        }\n  \n        <button>New Post</button>\n  \n      </div>\n    )\n  }\n  \n  const QuestListItem = ({title, date, symbol, comment_count}) => {\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{date}</p>\n        <img src={symbol}/>\n        <p>{comment_count}</p>\n      </div>\n    )\n  }\n  return (\n    <>\n    <NavForApp nav_title='QUEST' />\n    <Grid container >\n      <Grid item xs>\n        <p>Hello</p>\n      </Grid>\n\n      <Grid item xs >\n        <NodeBar nodes={nodes} />\n        <QuestList posts={posts}/>\n        \n      </Grid>\n    </Grid>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}